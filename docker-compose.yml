version: '2.1'

networks:
  monitor-net:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}
  vss_minio:
    driver_opts:
      type: none
      device: /home/dangln/Docker-Compose-Prometheus-and-Grafana/minio/minio_storage
      o: bind

  vss_redis:
    driver_opts:
      type: none
      device: /home/dangln/Docker-Compose-Prometheus-and-Grafana/redis/redis_storage
      o: bind

  vss_mongodb:
    driver_opts:
      type: none
      device: /home/dangln/Docker-Compose-Prometheus-and-Grafana/mongodb/mongodb_storage
      o: bind


services:
  vss-minio:
    container_name: minio
    image: "docker.io/bitnami/minio:2023.1.31-debian-11-r0"
    restart: always
    ports:
      - "10010:9000"
      - "10011:9001"
    volumes:
      - vss_minio:/data
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "123456a@"
      MINIO_PROMETHEUS_AUTH_TYPE: public
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  vss_redis:
    image: "docker.io/bitnami/redis:7.0.8-debian-11-r0"
    container_name: "redis"
    restart: always
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: "123456a@"
    volumes:
      - vss_redis:/bitnami/redis/data
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  redis-exporter:
    image: "bitnami/redis-exporter:1.45.0-debian-11-r26"
    container_name: "redis-exporter"
    ports:
      - 9121:9121
    restart: always
    environment:
      REDIS_ADDR: "redis:6379"
      # REDIS_USER: null
      REDIS_PASSWORD: "123456a@"
    links:
      - vss_redis
      - prometheus
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  vss_mongodb:
    image: "docker.io/bitnami/mongodb:6.0.4-debian-11-r0"
    container_name: "mongodb"
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - vss_mongodb:/bitnami/mongodb
    environment:
      MONGODB_ROOT_USER: "root"
      MONGODB_ROOT_PASSWORD: "123456a@"
      MONGODB_DATABASE: "vss-0-1-0" 
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  mongodb-exporter:
    image: "bitnami/mongodb-exporter:0.36.0-debian-11-r6"
    container_name: "mongodb-exporter"
    ports:
      - 9216:9216
    restart: always
    command:
      - '--mongodb.uri=mongodb://root:123456a%40@mongodb:27017'
      - '--collect-all'
      - '--no-mongodb.direct-connect'
    links:
      - vss_mongodb
      - prometheus
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  prometheus:
    image: quay.io/prometheus/prometheus:v2.40.5
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: always
    ports:
      - "9090:9090"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: quay.io/prometheus/alertmanager:v0.25.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: always
    ports:
      - "9093:9093"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexportser:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: always
    ports:
      - "8080:8080"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:9.3.1
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: always
    ports:
      - "3000:3000"
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  # pushgateway:
  #   image: prom/pushgateway:v1.2.0
  #   container_name: pushgateway
  #   restart: unless-stopped
  #   ports:
  #     - 9091
  #   networks:
  #     - monitor-net
  #   labels:
  #     org.label-schema.group: "monitoring"

  # caddy:
  #   image: stefanprodan/caddy
  #   container_name: caddy
  #   portss:
  #     - "3000:3000"
  #     - "9090:9090"
  #     - "9093:9093"
  #     - "9091:9091"
  #   volumes:
  #     - ./caddy:/etc/caddy
  #   environment:
  #     - ADMIN_USER=admin
  #     - ADMIN_PASSWORD=admin
  #   restart: unless-stopped
  #   networks:
  #     - monitor-net
  #   labels:
  #     org.label-schema.group: "monitoring"